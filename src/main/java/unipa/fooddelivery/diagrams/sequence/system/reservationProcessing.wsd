@startuml reservationProcessing

actor system
participant "In-Session\nDishes*" as dishes
control "Payment\nController" as paymentController
control "Reservation\nController" as reservationController
Database Database as db
participant "Reservation\nView" as ReservationView

activate system
activate dishes
    system -> dishes : acquire items\nfrom session
    alt error
    system x-- dishes : error
    else success
    dishes -> paymentController : request to make payment
    end

    activate paymentController
    paymentController -> paymentController : process request
    alt error
    system x-- paymentController : error
    else success
    paymentController -> reservationController : \n request to create\n reservation
    end

    activate reservationController
    reservationController -> reservationController : process request
    alt error
    paymentController x-- reservationController : undo payment
    system x-- paymentController : reservation cancelled
    else success
    reservationController -> db : \n save reservation\n on database
    end

    activate db
    db -> db : process request
    alt success
    db -> ReservationView : \n reservation saved
    else error
    reservationController x-- db : reservation not saved
    deactivate db
    paymentController x-- reservationController : undo payment
    system x-- paymentController : reservation cancelled
    end
    
    alt success
    reservationController <-- ReservationView : confirm reservation

    paymentController <-- reservationController : confirm payment
    deactivate reservationController
    system <-- paymentController : reservation successfully completed
    deactivate paymentController

alt success
    ReservationView -> ReservationView : show reservation
else error
    system x-- ReservationView : error
end

deactivate dishes
deactivate system


@enduml